<cruisecontrol xmlns:cb="urn:ccnet.config.builder">
  <!-- Common Variables -->
  <cb:define scriptDirectory="c:\dev\MetraNet\RMP\Extensions\Legacy_Internal\Source\Install\Scripts"
			 version="Debug"
  
			workingDirectory="D:\Metanga\SourceCode"
             reportDirectory="C:\MetraNetBuild"
             ccnetDirectory="C:\dev\MN CCNET"
             metangaDirectory="D:\Metanga"
             buildversion="$[$CCNetLabel]"
             buildMachine="METANGABUILD"
             projectName="$[$CCNetProject]"
             currentRelease="2013_07_a" 
             nextRelease="2013_08_a"
             scriptsDirectory="D:\CCNet\scripts"/>
	
	<!-- Load environment variables -->
    <property environment="env" toupper="true"/>

    <property name="rootdir"  value="${env.ROOTDIR}"/>
    <property name="mtrmpbin" value="${env.MTRMPBIN}"/>


  <queue name="Q1" duplicates="UseFirst"/>

  <project name="CruiseControl Configuration" queue="Q1" queuePriority="1">
    <triggers>
      <intervalTrigger seconds="30" />
    </triggers>
    <sourcecontrol type="git">
      <repository>git@github.com:Metanga/CCNet.git</repository>
      <executable>C:\Program Files (x86)\Git\cmd\git.cmd</executable>
      <workingDirectory>$(ccnetDirectory)</workingDirectory>
    </sourcecontrol>
  </project>  
  
  <project name="Metanga Release" queue="Q1" queuePriority="3">
    <webURL>http://METANGABUILD/ccnet/server/local/project/Metanga Release/ViewLatestBuildReport.aspx</webURL>
    <modificationDelaySeconds>10</modificationDelaySeconds>
    <maxSourceControlRetries>3</maxSourceControlRetries>
    <stopProjectOnReachingMaxSourceControlRetries>true</stopProjectOnReachingMaxSourceControlRetries>
    <sourceControlErrorHandling>ReportOnRetryAmount</sourceControlErrorHandling>

    <triggers>
      <intervalTrigger name="continuous" seconds="30" buildCondition="IfModificationExists" initialSeconds="30"/>
    </triggers>


    <sourcecontrol type="git">
      <repository>git@github.com:Metanga/Metanga.git</repository>
      <branch>$(currentRelease)</branch>
      <fetchSubmodules>true</fetchSubmodules>
      <executable>C:\Program Files (x86)\Git\cmd\git.cmd</executable>
      <workingDirectory>$(metangaDirectory)</workingDirectory>
    </sourcecontrol>

    <prebuild>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= Before prebuild tasks %time%</buildArgs>
        <description>Echo time</description>
      </exec>
	  
	  <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="ActivityServices" and state="running") call stopservice </buildArgs>
        <description>Stop ActivityServices</description>
	  </exec>
	  
	  <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="Pipeline" and state="running") call stopservice </buildArgs>
        <description>Stop Pipeline</description>
	  </exec>
	  
	  <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="BillingServer" and state="running") call stopservice </buildArgs>
        <description>Stop BillingServer</description>
	  </exec>
	  
	  <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="MetraPay" and state="running") call stopservice </buildArgs>
        <description>Stop MetraPay</description>
	  </exec>
	  
	  <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="MetraTech.FileService" and state="running") call stopservice </buildArgs>
        <description>Stop MetraTech.FileService</description>
	  </exec>
	  
	  <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="MetraTechDataExportService" and state="running") call stopservice </buildArgs>
        <description>Stop MetraTechDataExportService</description>
	  </exec>
	  
      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After prebuild tasks %time%</buildArgs>
        <description>Echo time</description>
      </exec>

    </prebuild>

    <tasks>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= Before =Git Reverting %time%</buildArgs>
        <description>Echo time</description>
      </exec>
	  
	 	
      <exec>
        <executable>GitRevert.bat</executable>
        <baseDirectory>$(gitCommands)</baseDirectory>
        <buildTimeoutSeconds>1800</buildTimeoutSeconds>
        <description>Reverting changes made by previous build</description>
      </exec>
	  
	  <exec>
        <executable>PullInAllFolders.bat</executable>
        <baseDirectory>$(gitCommands)</baseDirectory>
        <buildTimeoutSeconds>1800</buildTimeoutSeconds>
        <description>Pulling changes from github</description>
      </exec>

      <msbuild>
        <executable>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe</executable>
        <projectFile>${rootdir}\Build\MSBuild\MetraNetBuild.proj</projectFile>
        <buildArgs>/noconsolelogger /m /ds /p:config=$(version);MyTargets=Build /v:normal</buildArgs>
        <targets>All</targets>
        <timeout>1200</timeout>
        <logger>c:\Program Files (x86)\CruiseControl.NET\server\Rodemeyer.MsBuildToCCNet.dll</logger>
      </msbuild>

      <exec>
        <executable>CountWarnings.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs>"C:\Program Files (x86)\CruiseControl.NET\server\Metanga Release\Artifacts" "msbuild-results" 1</buildArgs>
        <successExitCodes>0</successExitCodes>
        <priority>High</priority>
        <description>Warning Counting</description>
      </exec>
	  
	 
      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After Build SaaS.sln and Count Warnings %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>CountWarnings.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs>RunAspNet C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet_compiler.exe -p $(workingDirectory)\MetangaWebApp\ -v / -f $(metangaDirectory)\Metanga</buildArgs>
        <description>ASP.Net Compiler for MetangaWebApp</description>
      </exec>
	  
	   <exec>
        <executable>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet_compiler.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs>-p $(workingDirectory)\PaymentBrokerWebApp\ -v / -f D:\Metanga\PaymentBroker</buildArgs>
        <description>ASP.Net Compiler for PaymentBrokerWebApp</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After aspnet_compiler.exe %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>ResetDatabase.bat</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildTimeoutSeconds>1800</buildTimeoutSeconds>
        <description>Reset Database</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After Reset Database %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>PackageBuild.bat</executable>
        <baseDirectory>$(metangaDirectory)\InstallScripts\MTDeployment</baseDirectory>
        <buildArgs>$(currentRelease)</buildArgs>
        <description>Package using MS Deploy</description>
      </exec>

      <exec>
        <executable>BuildSHA1Warnings.bat</executable>
        <baseDirectory>$(scriptsDirectory)</baseDirectory>
        <buildArgs>$(currentRelease) $(buildversion) $(workingDirectory)</buildArgs>
        <description>Warning Count, save build version and SHA-1 of last commit</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After Package using MS Deploy(PackageBuild.bat) %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>$(workingDirectory)\bin\ExecAllTests.exe</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildArgs>$(workingDirectory)\SaaS.sln "C:\Program Files (x86)\Microsoft Visual Studio 11.0\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" /Settings:$(workingDirectory)\TestSetting.runsettings /Logger:trx /TestCaseFilter:"TestCategory!=IntegrationTest" /Platform:x64 /InIsolation</buildArgs>
        <buildTimeoutSeconds>0</buildTimeoutSeconds>
        <description>Run Tests</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After Runing Tests %time%</buildArgs>
        <description>Echo time</description>
      </exec>
	  
      <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="JobLocalService" and state="running") call stopservice </buildArgs>
        <description>Stop JobLocalService Service</description>
      </exec>

    </tasks>

    <publishers>
      <merge>
        <files>
          <file>$(reportDirectory)\*.trx</file>
          <file>$(reportDirectory)\ConfigurationLoadErrors.xml</file>
        </files>
      </merge>

      <xmllogger logDir="c:\Program Files (x86)\CruiseControl.NET\server\Metanga Release\Logfiles" />

      <email mailhost="mail.metratech.com" mailport="25" from="SystemBuild@MetraTech.com" useSSL="false">
        <mailhostUsername>systembuild</mailhostUsername>
        <mailhostPassword>y3dUth6D</mailhostPassword>
        <includeDetails>True</includeDetails>
        <users>
          <user name="mdesousa" group="buildmaster" address="mdesousa@metratech.com"/>
          <user name="jmondanaro" group="buildmaster" address="jmondanaro@metratech.com"/>
          <user name="sbobyr" group="manager" address="sbobyr@metratech.com"/>
          <user name="sweatherby" group="manager" address="sweatherby@metratech.com"/>
          <user name="vvasilenko" group="buildmaster" address="vvasilenko@metratech.com"/>
        </users>
        <groups>
          <group name="buildmaster">
            <notifications>
              <notificationType>Always</notificationType>
            </notifications>
          </group>
          <group name="manager">
            <notifications>
              <notificationType>Always</notificationType>
            </notifications>
          </group>
          <group name="qa">
            <notifications>
              <notificationType>Always</notificationType>
            </notifications>
          </group>
        </groups>
        <converters>
          <regexConverter find="$" replace="@metratech.com" />
        </converters>
        <modifierNotificationTypes>
          <NotificationType>Failed</NotificationType>
          <NotificationType>Success</NotificationType>
        </modifierNotificationTypes>
      </email>

      <artifactcleanup cleanUpMethod="KeepLastXBuilds" cleanUpValue="10" />

      <statistics>
        <statisticList>
          <statistic name="Validation Total Issues" xpath="sum(//ValidationResults/Summary/NumErrors) + sum(//ValidationResults/Summary/NumWarnings) + sum(//ValidationResults/Summary/NumDocs)" generateGraph='true' include='true' />
          <statistic name="Validation Errors" xpath="sum(//ValidationResults/Summary/NumErrors)" generateGraph='true' include='true' />
          <statistic name="Validation Warnings" xpath="sum(//ValidationResults/Summary/NumWarnings)" generateGraph='true' include='true' />
          <statistic name="Validation Documentation" xpath="sum(//ValidationResults/Summary/NumDocs)" generateGraph='true' include='true' />
          <statistic name="Configuration Load Errors" xpath="sum(//ValidationResults/Summary/NumErrors)" generateGraph='true' include='true' />
          <statistic name="Configuration Load Warnings" xpath="sum(//ValidationResults/Summary/NumWarnings)" generateGraph='true' include='true' />
        </statisticList>
      </statistics>

      <modificationHistory />
    </publishers>

    <externalLinks>
      <externalLink name="MetraNet .NET Documentation" url="http://METANGABUILD/ccnet/MetraNetDocumentation/SaaSSolution/Index.html" />
      <externalLink name="MetraNet DB Schema Documentation" url="http://METANGABUILD/ccnet/MetraNetDocumentation/SaaSNetMeter/main.html" />
    </externalLinks>

  </project>

  <project name="Metanga Master" queue="Q1" queuePriority="4">
    <webURL>http://METANGABUILD/ccnet/server/local/project/Metanga Master/ViewLatestBuildReport.aspx</webURL>
    <modificationDelaySeconds>10</modificationDelaySeconds>
    <maxSourceControlRetries>3</maxSourceControlRetries>
    <stopProjectOnReachingMaxSourceControlRetries>true</stopProjectOnReachingMaxSourceControlRetries>

    <triggers>
      <intervalTrigger name="continuous" seconds="30" buildCondition="IfModificationExists" initialSeconds="30"/>
    </triggers>


    <sourcecontrol type="git">
      <repository>git@github.com:Metanga/Metanga.git</repository>
      <fetchSubmodules>true</fetchSubmodules>
      <executable>C:\Program Files (x86)\Git\cmd\git.cmd</executable>
      <workingDirectory>$(metangaDirectory)</workingDirectory>
    </sourcecontrol>

    <prebuild>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= Before prebuild tasks %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="JobLocalService" and state="running") call stopservice </buildArgs>
        <description>Stop JobLocalService Service</description>
      </exec>

      <exec>
        <executable>iisreset</executable>
        <baseDirectory>$(metangaDirectory)</baseDirectory>
        <description>Reset IIS</description>
      </exec>

      <exec>
        <executable>PackageCleanup.bat</executable>
        <baseDirectory>$(metangaDirectory)</baseDirectory>
        <description>Package Cleanup</description>
      </exec>

      <exec>
        <executable>ClearMetraNetDirectory.bat</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildArgs>$(reportDirectory)</buildArgs>
        <description>Clear $(reportDirectory) directory</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After prebuild tasks %time%</buildArgs>
        <description>Echo time</description>
      </exec>

    </prebuild>

    <tasks>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= Before BuildDatabase and SQLMetal %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>BuildDatabase.bat</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildTimeoutSeconds>1800</buildTimeoutSeconds>
        <description>Build Database</description>
      </exec>     

      <exec>
        <executable>SqlMetal.exe</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildArgs>/server:. /user:sa /password:MetraTech1 /database:$(buildMachine) /views /code:$(workingDirectory)\Metanga.Infrastructure\DataAccess\NetMeter.cs /namespace:Metanga.Infrastructure.DataAccess /context:NetMeter</buildArgs>
        <description>Sql Metal for Metanga Database</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After BuildDatabase and SQLMetal %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>CleanerCmdLine.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs>/pf BuildCleaner.json</buildArgs>
        <successExitCodes>0</successExitCodes>
        <priority>High</priority>
        <description>Checking the solution and projects for restrictions</description>
      </exec>

      <msbuild>
        <executable>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe</executable>
        <projectFile>$(workingDirectory)\Metanga.Miscellaneous\Metanga.Miscellaneous.CheckSolutionRestrictions\Metanga.Miscellaneous.CheckSolutionRestrictions.csproj</projectFile>
        <buildArgs>/nr:false /noconsolelogger /p:Configuration=Debug /p:RunCodeAnalysis=True /v:normal /m /p:AssemblyOriginatorKeyFile=$(workingDirectory)\SaaS.snk</buildArgs>
        <targets>Rebuild</targets>
        <timeout>1200</timeout>
        <logger>c:\Program Files (x86)\CruiseControl.NET\server\Rodemeyer.MsBuildToCCNet.dll</logger>
      </msbuild>

      <exec>
        <executable>Metanga.Miscellaneous.CheckSolutionRestrictions.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs></buildArgs>
        <successExitCodes>0</successExitCodes>
        <priority>High</priority>
        <description>Checking the solution and projects for restrictions</description>
      </exec>

      <msbuild>
        <executable>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\MSBuild.exe</executable>
        <projectFile>$(workingDirectory)\SaaS.sln</projectFile>
        <buildArgs>/nr:false /noconsolelogger /p:Configuration=Debug /p:RunCodeAnalysis=True /v:normal /m /p:AssemblyOriginatorKeyFile=$(workingDirectory)\SaaS.snk</buildArgs>
        <targets>Rebuild</targets>
        <timeout>1200</timeout>
        <logger>c:\Program Files (x86)\CruiseControl.NET\server\Rodemeyer.MsBuildToCCNet.dll</logger>
      </msbuild>

      <exec>
        <executable>CountWarnings.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs>"C:\Program Files (x86)\CruiseControl.NET\server\Metanga Master\Artifacts" "msbuild-results"</buildArgs>
        <successExitCodes>0</successExitCodes>
        <priority>High</priority>
        <description>Warning Counting</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After Build SaaS.sln and Count Warnings %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>CountWarnings.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs>RunAspNet C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet_compiler.exe -p $(workingDirectory)\MetangaWebApp\ -v / -f $(metangaDirectory)\Metanga</buildArgs>
        <description>ASP.Net Compiler for MetangaWebApp</description>
      </exec>
	  
	  <exec>
        <executable>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\aspnet_compiler.exe</executable>
        <baseDirectory>$(workingDirectory)\bin</baseDirectory>
        <buildArgs>-p $(workingDirectory)\PaymentBrokerWebApp\ -v / -f D:\Metanga\PaymentBroker</buildArgs>
        <description>ASP.Net Compiler for PaymentBrokerWebApp</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After aspnet_compiler.exe %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>ResetDatabase.bat</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildTimeoutSeconds>1800</buildTimeoutSeconds>
        <description>Reset Database</description>
      </exec>

      <exec>
        <executable>$(workingDirectory)\bin\ExecAllTests.exe</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildArgs>$(workingDirectory)\SaaS.sln "C:\Program Files (x86)\Microsoft Visual Studio 11.0\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" /EnableCodeCoverage /Settings:$(workingDirectory)\TestSettingWithCodeCoverage.runsettings /Logger:trx /TestCaseFilter:"TestCategory=UnitTest" /Platform:x64 /InIsolation</buildArgs>
        <buildTimeoutSeconds>0</buildTimeoutSeconds>
        <description>Run Unit Tests</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After Run SaaS solution Unit Tests %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <!--<exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= Before running the NDepend Console task %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>RunNDepend.bat</executable>
        <baseDirectory>$(workingDirectory)</baseDirectory>
        <buildArgs>$(workingDirectory)\SaaS.ndproj $(reportDirectory)\NDepend</buildArgs>
        <description>Run the NDepend analysis.</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After running the NDepend Console task %time%</buildArgs>
        <description>Echo time</description>
      </exec>-->

      <exec>
        <executable>PackageBuild.bat</executable>
        <baseDirectory>$(metangaDirectory)\InstallScripts\MTDeployment</baseDirectory>
        <buildArgs>$(nextRelease)</buildArgs>
        <description>Package using MS Deploy</description>
      </exec>

      <exec>
        <executable>BuildSHA1Warnings.bat</executable>
        <baseDirectory>$(scriptsDirectory)</baseDirectory>
        <buildArgs>$(nextRelease) $(buildversion) $(workingDirectory)</buildArgs>
        <description>Warning Count, save build version and SHA-1 of last commit</description>
      </exec>

      <exec>
        <executable>cmd.exe</executable>
        <baseDirectory>$(ccnetDirectory)</baseDirectory>
        <buildArgs>/c echo TaskTimer= After Package using MS Deploy(PackageBuild.bat) %time%</buildArgs>
        <description>Echo time</description>
      </exec>

      <exec>
        <executable>$(workingDirectory)\bin\Metanga.Miscellaneous.VSCoverage2Xml.exe</executable>
        <baseDirectory>$(reportDirectory)</baseDirectory>
        <buildArgs>/DataCoverageFolder=$(reportDirectory) /XmlCoverageFile="UnitTestsCoverage.xml" /MachineName=$(buildMachine) /UserName=ccnet</buildArgs>
        <buildTimeoutSeconds>0</buildTimeoutSeconds>
        <description>Create VS code coverage report</description>
      </exec>

      <exec>
        <executable>wmic</executable>
        <buildArgs>service where (name="Joblocalservice" and state="running") call stopservice </buildArgs>
        <description>Stop Joblocalservice Service</description>
      </exec>
    </tasks>

    <publishers>
      <merge>
        <files>
          <file>$(reportDirectory)\*.trx</file>
          <file>$(reportDirectory)\UnitTestsCoverage.xml</file>
          <file>$(reportDirectory)\ConfigurationLoadErrors.xml</file>
          <!--<file>$(reportDirectory)\NDepend\NDependMain.xml</file>-->
        </files>
      </merge>

      <xmllogger logDir="c:\Program Files (x86)\CruiseControl.NET\server\Metanga Master\Logfiles" />

      <email mailhost="mail.metratech.com" mailport="25" from="SystemBuild@MetraTech.com" useSSL="false">
        <mailhostUsername>systembuild</mailhostUsername>
        <mailhostPassword>y3dUth6D</mailhostPassword>
        <includeDetails>True</includeDetails>
        <users>
          <user name="mdesousa" group="buildmaster" address="mdesousa@metratech.com"/>
          <user name="jmondanaro" group="buildmaster" address="jmondanaro@metratech.com"/>
          <user name="sbobyr" group="manager" address="sbobyr@metratech.com"/>
          <user name="sweatherby" group="manager" address="sweatherby@metratech.com"/>
          <user name="vvasilenko" group="buildmaster" address="vvasilenko@metratech.com"/>
        </users>
        <groups>
          <group name="buildmaster">
            <notifications>
              <notificationType>Always</notificationType>
            </notifications>
          </group>
          <group name="manager">
            <notifications>
              <notificationType>Always</notificationType>
            </notifications>
          </group>
          <group name="qa">
            <notifications>
              <notificationType>Always</notificationType>
            </notifications>
          </group>
        </groups>
        <converters>
          <regexConverter find="$" replace="@metratech.com" />
        </converters>
        <modifierNotificationTypes>
          <NotificationType>Failed</NotificationType>
          <NotificationType>Success</NotificationType>
        </modifierNotificationTypes>
      </email>

      <artifactcleanup cleanUpMethod="KeepLastXBuilds" cleanUpValue="40" />

      <statistics>
        <statisticList>
          <statistic name="Validation Total Issues" xpath="sum(//ValidationResults/Summary/NumErrors) + sum(//ValidationResults/Summary/NumWarnings) + sum(//ValidationResults/Summary/NumDocs)" generateGraph='true' include='true' />
          <statistic name="Validation Errors" xpath="sum(//ValidationResults/Summary/NumErrors)" generateGraph='true' include='true' />
          <statistic name="Validation Warnings" xpath="sum(//ValidationResults/Summary/NumWarnings)" generateGraph='true' include='true' />
          <statistic name="Validation Documentation" xpath="sum(//ValidationResults/Summary/NumDocs)" generateGraph='true' include='true' />
          <statistic name="Configuration Load Errors" xpath="sum(//ValidationResults/Summary/NumErrors)" generateGraph='true' include='true' />
          <statistic name="Configuration Load Warnings" xpath="sum(//ValidationResults/Summary/NumWarnings)" generateGraph='true' include='true' />
          <firstMatch name="ILInstructions" xpath="//ApplicationMetrics/@NILInstruction" generateGraph='true' include='true' />
          <firstMatch name="LinesOfCode" xpath="//ApplicationMetrics/@NbLinesOfCode" generateGraph='true' include='true' />
          <firstMatch name="LinesOfComment" xpath="//ApplicationMetrics/@NbLinesOfComment" generateGraph='true' include='true' />
          <statistic name="NDepend Rule Critical Result" xpath="count(//RuleCriticalResult/RuleCritical)" generateGraph='true' include='true' />
        </statisticList>
      </statistics>

      <modificationHistory />
    </publishers>

    <externalLinks>
      <externalLink name="MetraNet .NET Documentation" url="http://METANGABUILD/ccnet/MetraNetDocumentation/SaaSSolution/Index.html" />
      <externalLink name="MetraNet DB Schema Documentation" url="http://METANGABUILD/ccnet/MetraNetDocumentation/SaaSNetMeter/main.html" />
    </externalLinks>

  </project>

  
</cruisecontrol>